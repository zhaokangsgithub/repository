<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
  default-lazy-init="false">
  
    <!-- 定时器开关 开始 -->
    <task:annotation-driven />
    <!-- 标注类型 的事务配置 如果使用注解事务。就放开 <tx:annotation-driven /> -->
    <tx:annotation-driven />
    <import resource="classpath*:application.properties"/>
    <context:component-scan base-package="com.hzzl.demo.*"/>
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 通过扫描的模式，扫描目录在com.hzcominfo.application.common.base.cmpt.kernel.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hzzl.demo.frame.spring.kernel.mapper" />
    </bean>

    <!-- 配置自定义异常处理器 -->
    <bean id="handlerExceptionResolver"
                             class="com.hzzl.demo.base.exception.resolve.CustomExceptionResolver"/>

    <!-- 事务配置 -->
    <!-- 降低事务顺序,防止日志插入被回滚 -by sunxy -->
    <tx:annotation-driven transaction-manager="transactionManager" order="4" />
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- aop事务配置 -->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.hzzl.demo.controller..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" order="2" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="save*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="sort*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
            <tx:method name="logicDelById" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>
    
    <aop:aspectj-autoproxy proxy-target-class="true"/> 
    <!-- 
     <bean id="log4jHandlerAOP" class="com.hzcominfo.etl.settings.web.logAop.LogAopAction"></bean> 
        <aop:config proxy-target-class="true">
            <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
            <aop:pointcut id="logPointCut" expression="execution(* org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(..))" /> 
            <aop:around method="doController" pointcut-ref="logPointCut" /> </aop:aspect> 
        </aop:config>
         -->
</beans>
